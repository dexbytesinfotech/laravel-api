<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ rootNamespace }}Http\Controllers\Api\BaseController as BaseController;
use {{ namespacedRequests }}
use {{ namespacedResources }}

class {{ class }} extends BaseController
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
       return $this->sendResponse({{ collectionClass }}::collection({{ model }}::all()), 'Successfully.');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \{{ namespacedStoreRequest }}  $request
     * @return \Illuminate\Http\Response
     */
    public function store({{ storeRequest }} $request, {{ model }} ${{ modelVariable }})
    {
          try
        {
            $resource = ${{ modelVariable }}->create($request->all());            
            return $this->sendResponse(new {{ resourceClass }}($resource), "{{ model }} created Successfully");

        } catch (\Exception $e) {                
            return $this->sendError($e->getMessage(), ['error'=> Response::HTTP_NOT_FOUND]);            
        }
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
         try{

            ${{ modelVariable }} = {{ model }}::find($id);
            return $this->sendResponse(new {{ resourceClass }}(${{ modelVariable }}), 'Successfully.');
       
        } catch (\Exception $e) {                
            return $this->sendError($e->getMessage(), ['error'=> Response::HTTP_NOT_FOUND]);            
        }
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \{{ namespacedUpdateRequest }}  $request
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function update({{ updateRequest }} $request, $id)
    {
        try
        {   ${{ modelVariable }} = {{ model }}::findOrFail($id);
            ${{ modelVariable }}->update($request->all());            
            return $this->sendResponse(new {{ resourceClass }}(${{ modelVariable }}), "{{ model }} updated Successfully");
        
        } catch (\Exception $e) {                
            return $this->sendError($e->getMessage(), ['error'=> Response::HTTP_NOT_FOUND]);            
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        try
        {
            {{ model }}::find($id)->delete();
            return $this->sendResponse([], '{{ model }} deleted Successfully');

        } catch (\Exception $e) {                
            return $this->sendError($e->getMessage(), ['error'=> Response::HTTP_NOT_FOUND]);            
        }
    }
}
